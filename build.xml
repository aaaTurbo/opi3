<?xml version="1.0"?>
<project name="opi3"
         xmlns:if="ant:if"
         default="build">

    <property file="build.properties"/>

    <taskdef resource="net/sf/antcontrib/antlib.xml">
        <classpath>
            <pathelement location="lib/ant-contrib-1.0b3.jar" />
        </classpath>
    </taskdef>

    <path id="classpath.testSource">
        <fileset dir="src/test/lib" includes="**/*.jar"/>
        <pathelement location="${target.tests}"/>
    </path>

    <target name="init">
        <mkdir dir="${target.classes}"/>
        <mkdir dir="${target.tests}"/>
    </target>

    <target name="compile" depends="init">
        <javac destdir="${target.classes}"
               srcdir="${main.source}">
        </javac>
        <echo message="Successfully compiled main sources"/>
    </target>

    <target name="build" depends="compile">
        <jar destfile="${dist.jar}" basedir="${target.classes}" compress="false" index="true">
            <manifest>
                <attribute name="Main-Class" value="ru.aaaTurbo.Main"/>
            </manifest>
        </jar>
        <echo message="Successfully built"/>
    </target>

    <target name="clean">
        <trycatch>
            <try>
                <delete dir="${target}"/>
            </try>
            <catch>
                <echo message="Couldn't clean automatically, please, check existence or access to ${target}"/>
            </catch>
        </trycatch>
        <echo message="Cleaned target"/>
    </target>

    <target name="compileTest" depends="build">
        <javac destdir="${target.tests}"
               srcdir="${test.source}">
            <classpath refid="classpath.testSource"/>
        </javac>
        <echo message="Successfully compiled tests"/>
    </target>

    <target name="test" depends="compileTest">
        <mkdir dir="${test.result.dir}"/>
        <junitlauncher printsummary="on" haltonfailure="yes">
            <classpath refid="classpath.testSource"/>
            <testclasses outputdir="${test.result.dir}">
                <fileset dir="${target.tests}" includes="**/*.class" />
                <listener type="legacy-xml" sendSysOut="true" sendSysErr="true"/>
            </testclasses>
        </junitlauncher>
        <echo message="Test completed"/>
    </target>

</project>